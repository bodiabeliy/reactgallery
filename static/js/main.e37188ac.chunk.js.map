{"version":3,"sources":["components/Photo.js","components/PhotoList.js","components/Alert.js","components/Authorization.js","components/Drawer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Photo","image","useState","open","setModalOpen","selectedFile","setSelectedFile","preview","setPreview","useEffect","file","objectUrl","URL","createObjectURL","document","querySelector","insertAdjacentHTML","bytes","i","parseInt","Math","floor","log","round","pow","bytesToSize","size","name","modal","setTimeout","style","display","Btn","revokeObjectURL","undefined","photo","Button","className","Card","Img","src","startIcon","onClick","variant","background","color","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","description","type","Fab","onChange","e","target","files","Array","from","forEach","useStyles","makeStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","palette","text","secondary","AllPhotos","props","classes","Grid","container","photos","map","item","lg","xs","sm","md","Paper","Alert","enqueueSnackbar","useSnackbar","Fragment","changeAlert","Boolean","IntegrationNotistack","maxSnack","alignItems","justifyContent","flexDirection","backgroundColor","border","boxShadow","shadows","Authorization","setOpen","endIcon","console","TextField","helperText","id","label","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","PersistentDrawerLeft","auth","useTheme","anchorEl","setAnchorEl","openClick","handleClose","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","aria-label","sx","mr","Typography","component","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","to","Drawer","anchor","direction","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","MenuAppBar","Box","App","adding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e37188ac.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nexport default function Photo({image}) {\r\n  // состояние для открытия модального окна\r\n  const [open, setModalOpen] = useState(false);\r\n  // открытие окна\r\n  const ShowModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n // закрытие окна\r\n  const ModalClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n  // появление предупреждающего уведомления\r\n  function Btn() {\r\n    const modal = document.querySelector('.photoGrid')\r\n    setTimeout(() => {\r\n    const notification = document.querySelector('.SnackbarItem-variantError-34 ')\r\n    notification.style.display ='none'\r\n    }, 3000)\r\n    setTimeout(() => {\r\n      modal.insertAdjacentHTML('afterend', \r\n     `\r\n      <div class=\"SnackbarItem-root-24 SnackbarItem-wrappedRoot-39 SnackbarItem-anchorOriginBottomLeft-30\">\r\n        <div class=\"ForwardRef-root-40 SnackbarItem-contentRoot-31 SnackbarItem-variantError-34 SnackbarItem-lessPadding-32\" aria-describedby=\"notistack-snackbar\" role=\"alert\" style=\"transform: none;\">\r\n          <div id=\"notistack-snackbar\" class=\"SnackbarItem-message-37\"><svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" style=\"font-size: 20px; margin-inline-end: 8px;\">\r\n            <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\r\n              6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\r\n              13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"></path>\r\n                </svg>Only regrsted user can edit files!\r\n          </div>\r\n        </div>\r\n      </div>\r\n      `)\r\n    }, 500)\r\n  }\r\n\r\n  // ф-я подсчета размера файла\r\n  function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (bytes === 0) return '0 Byte'\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n   }\r\n\r\n\r\n  // состояние для выбраного файла\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  // состояние для создания превью картинки\r\n  const [preview, setPreview] = useState()\r\n  // проверка на отсуствие файла для его подальшего добавления\r\n      useEffect((file) => {\r\n      if (!selectedFile) {\r\n          setPreview(undefined)\r\n          return\r\n      }\r\n      // добавление ссылки на картинки для текущего файла\r\n      const objectUrl = URL.createObjectURL(selectedFile)\r\n      setPreview(objectUrl)\r\n      // добавление новой фотографии\r\n      const selector = document.querySelector('.MuiGrid-root')\r\n      selector.insertAdjacentHTML('beforeend', `\r\n      <div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6 MuiGrid-grid-md-3 MuiGrid-grid-lg-4\">\r\n      <p>Upload images: <b>${bytesToSize(selectedFile.size)}</b></p>\r\n        <div class=\"MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded\">\r\n        <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text\" tabindex=\"0\" type=\"button\"><span class=\"MuiButton-label\">\r\n          <div class=\"cardAdd\">\r\n          <h3>${selectedFile.name}</h3>\r\n            <img class=\"card-img card card-img\" src=\"${objectUrl}\">\r\n          </div>\r\n          <button onclick=${Btn()} class=\"MuiButtonBase-root MuiButton-root MuiButton-contained authbtn\" tabindex=\"0\" type=\"button\" style=\"background: rgb(255, 152, 0); color: rgb(255, 255, 255); margin-bottom: 14px; margin-left: 50px;\">\r\n            <span class=\"MuiButton-label\"><span class=\"MuiButton-startIcon MuiButton-iconSizeMedium\">\r\n              <svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n              <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\r\n              </svg></span>Edit photo</span>\r\n                <span class=\"MuiTouchRipple-root\"></span>\r\n          </button>\r\n        </div>` )\r\n      return () => URL.revokeObjectURL(objectUrl)\r\n  }, [selectedFile])\r\n  // выбор файла изображения с компютера\r\n  const onSelectFile = e => {\r\n    setSelectedFile(e.target.files[0])\r\n    // конвертация объекта картинки в массив, \r\n    // для последующих манипуляций\r\n    const files = Array.from(e.target.files)\r\n    files.forEach(file => {\r\n     \r\n    })\r\n  }\r\n// если карточка имеет поле фото\r\n  if (image.photo != null) {\r\n    return (\r\n      <Button >\r\n      <div className='card'>\r\n        <Card.Img className='card' src={image.photo} />\r\n        <Button\r\n          className='authbtn'\r\n          startIcon={<VisibilityIcon></VisibilityIcon>}\r\n          onClick={ShowModal}\r\n          variant=\"contained\"\r\n          style={{background: '#ff9800', color:'#fff' }}\r\n        >\r\n        Show details\r\n      </Button>\r\n      \r\n      <Modal\r\n        className='modalPhoto'\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={open}\r\n        onClose={ModalClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div>\r\n            <h2 className='modal_header'> {image.name}</h2>\r\n            <Card.Img className='cardModal' src={image.photo} />\r\n            <p><b>Description:</b> {image.description}</p>\r\n        </div>\r\n        </Fade>\r\n      </Modal>\r\n      </div>\r\n\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  // возвращение карточки с отсутствующим изображением\r\n    return (\r\n      <Button type='file'>\r\n      <div className='cardAdd'>\r\n          {selectedFile && \r\n           <Card.Img\r\n           className='card card-img' \r\n           src={preview} \r\n           /> }\r\n          <Fab color=\"primary\" >\r\n          <input \r\n           className='input'\r\n           type=\"file\" \r\n           onChange={onSelectFile}\r\n           /> \r\n            <AddIcon />\r\n          </Fab> \r\n      </div>\r\n      </Button>\r\n    )\r\n \r\n}","import React, {} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Photo from './Photo'\r\n\r\n\r\n// стили\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: '50px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n\r\nexport default function AllPhotos(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <h1>System Images:</h1>\r\n      <Grid container spacing={3}>\r\n        { props.photos.map(photo => {\r\n        return (\r\n         \r\n        <Grid item  lg={4} xs={12} sm={6} md={3}>\r\n        <Paper className={classes.paper}>\r\n        <Photo image={photo}/>\r\n        </Paper>\r\n        </Grid>\r\n        )\r\n       })\r\n      }\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nfunction Alert() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    const changeAlert = Boolean(false)\r\n    if (changeAlert === true) {\r\n      variant = 'success'\r\n      enqueueSnackbar('Account successful created!', { variant  });\r\n    }\r\n    if (changeAlert === false) {\r\n      variant = 'error'\r\n      enqueueSnackbar('field username or password don`t must be empty!', { variant });\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n       onClick={handleClickVariant('success')}\r\n        className='modalBtn'\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        style={{background: '#ff9800', color: 'white', marginTop: '20px'}}\r\n      >\r\n        Add account\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <Alert />\r\n    </SnackbarProvider>\r\n  );\r\n}","import React, {useState} from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport Alert from './Alert'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n \r\n\r\nconst Authorization = () => {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    console.log(open);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log(open);\r\n    setOpen(false);\r\n  };\r\n\r\n return (\r\n  <div className='modal' >\r\n    <div className=\"modal_content\">\r\n        <Button\r\n          className='authbtn'\r\n         endIcon={<HowToRegIcon />}\r\n          onClick={handleOpen}\r\n          variant=\"contained\"\r\n          style={{background: '#ff9800', color:'#fff' }}\r\n        >\r\n        Sign Up\r\n       \r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n         <h2 className='modal_header'> Create new account</h2>\r\n        <div>\r\n         <TextField\r\n          helperText=\"Please enter your username\"\r\n          id=\"demo-helper-text-aligned\"\r\n          label=\"username\"\r\n        />\r\n        <TextField\r\n          helperText=\"Please enter your password\"\r\n          id=\"demo-helper-text-aligned-no-helper\"\r\n          label=\"password\"\r\n        />\r\n        </div>\r\n        <Alert />\r\n      </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Authorization","import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Auth from './Authorization'\r\nimport GTranslateIcon from '@material-ui/icons/GTranslate';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n// размер drawer-a (окно с боковым появлением)\r\nconst drawerWidth = 300;\r\n// стили для drawer\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% + ${drawerWidth /0.7}px)`,\r\n    marginLeft: -drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  // состояние для проверки авторизации (ввода символов) \r\n  const [auth] = useState(true);\r\n  // применение классового подхода к стилям\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // состояние модального окна\r\n  const [open, setOpen] = useState(false);\r\n  // состояние-тригер для выдвижения drawer-a\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  // точка состояния \r\n  const openClick = Boolean(anchorEl);\r\n\r\n  // выбран елемент из списка\r\n  const handleMenu = (event) => {\r\n    console.log(props);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (bytes === 0) return '0 Byte'\r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\r\n   }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n       <Toolbar>\r\n          <IconButton\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\" \r\n            color=\"inherit\" \r\n            aria-label=\"menu\" \r\n            sx={{ mr: 2 }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Photos\r\n          </Typography>\r\n          <Auth />\r\n\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                color=\"inherit\"\r\n                onClick={handleMenu}\r\n              >\r\n               <GTranslateIcon />\r\n              </IconButton>\r\n              <IconButton\r\n               color=\"inherit\"\r\n              > \r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={openClick}\r\n                onClose={handleClose}\r\n              >\r\n               <Router>\r\n                <MenuItem onClick={handleClose}>\r\n                 <Route>\r\n                 <Link \r\n                  className='link' \r\n                  to='/russian'>Русский\r\n                  </Link>\r\n                 </Route>\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleClose}>\r\n                  <Route>\r\n                  <Link \r\n                  className='link'\r\n                   to='/'\r\n\r\n                   >English\r\n                   </Link>\r\n                  </Route>\r\n                </MenuItem>\r\n               </Router>\r\n              </Menu>\r\n              <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ?\r\n            <div>\r\n            Options\r\n            <ChevronLeftIcon />\r\n            </div> \r\n            :\r\n             <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[`System storage: ${bytesToSize(21400000)}`, `User upload: ${bytesToSize(0)}`].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <PhotoSizeSelectActualIcon /> : <PermIdentityIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nimport Drawer from './Drawer'\r\n// компонент навигации\r\nexport default function MenuAppBar() {\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n      <Drawer />\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","import './App.css';\nimport React from 'react';\n\nimport PhotoList from './components/PhotoList'\nimport Navbar from './components/Navbar'\n\n\n\nfunction App() {\n\n  //дефолтный массив картинок \n  const gallery = [\n    {photo: './images/bag.jpg',  id:1, name: 'Night bag', description: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Distinctio quam sit nesciunt, accusamus illo ab, beatae iure consequatur consequuntur officiis sapiente velit molestias debitis laborum incidunt. Molestiae aliquid, a quidem nulla omnis sed aspernatur quam quo culpa tenetur neque odit natus eos cupiditate autem quod sint possimus, iure hic nisi.'},\n    {photo: './images/walk.jpg', id:2,name: 'Alley', description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam alias delectus quod ut id temporibus officia sapiente fugiat aliquam ab, atque ipsum ratione corrupti error velit incidunt omnis? Minus officiis distinctio sed eum molestias...'},\n    {photo: './images/sunset.jpg', id:3, name: 'Sunset', description:'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Perferendis similique cum, quos, ullam ea nihil fugiat fugit esse blanditiis voluptatem deserunt, tempore mollitia! Dolores, quia fuga. Dolores praesentium corrupti eveniet eos nobis?'},\n    {photo: './images/sunrise.jpg', id:4, name: 'Sunrise', description: '      Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque velit magni exercitationem, enim odio quod quae aperiam. Nam, similique iste dolores ipsam sunt, nemo dolor in a minima doloribus ut dicta odio minus perspiciatis voluptatem fugiat tempora sit modi quibusdam inventore. Repellendus, totam corrupti.'},\n    {photo: './images/300x200.jpg', name: 'fon'},\n    {adding: '', name:''},\n  ]\n\n  // атрибут photos - входящие данные для детского компонента (формирование списка фото)\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"photoGrid\">\n      <PhotoList photos={gallery} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}