{"version":3,"sources":["components/Photo.js","components/PhotoList.js","App.js","reportWebVitals.js","index.js"],"names":["Photo","image","useState","selectedFile","setSelectedFile","preview","setPreview","useEffect","objectUrl","URL","createObjectURL","console","log","document","querySelector","insertAdjacentHTML","revokeObjectURL","undefined","photo","Button","lassName","onClick","Card","Img","className","src","type","onChange","e","target","files","Array","from","forEach","file","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","AllPhotos","props","classes","Grid","container","photos","map","item","lg","xs","sm","md","Paper","style","marginTop","variant","button","startIcon","App","id","adding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+QAMe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,MAE7B,EAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WACN,GAAKJ,EAAL,CAKA,IAAMK,EAAYC,IAAIC,gBAAgBP,GActC,OAbAG,EAAWE,GAEXG,QAAQC,IAAIJ,GACKK,SAASC,cAAc,iBAC/BC,mBAAmB,YAA5B,odAMiDP,EANjD,yCASO,kBAAMC,IAAIO,gBAAgBR,IAlB7BF,OAAWW,KAmBhB,CAACd,IAkBJ,OAAmB,MAAfF,EAAMiB,MAEN,cAACC,EAAA,EAAD,UACE,qBACEC,SAAS,OACTC,QAASrB,EAFX,SAIA,cAACsB,EAAA,EAAKC,IAAN,CAAUC,UAAU,OAAOC,IAAKxB,EAAMiB,YAOxC,cAACC,EAAA,EAAD,UACA,sBAAKK,UAAU,UAAf,UACKrB,GAAiB,cAACmB,EAAA,EAAKC,IAAN,CAAUC,UAAU,gBAAeC,IAAKpB,IAC1D,uBACCmB,UAAU,QACVE,KAAK,OACLC,SApCY,SAAAC,GAEnBxB,EAAgBwB,EAAEC,OAAOC,MAAM,IAG/B,IAAMA,EAAQC,MAAMC,KAAKJ,EAAEC,OAAOC,OAClCA,EAAMG,SAAQ,SAAAC,GACZjC,EAAQ8B,MAAMC,KAAK/B,GAEnBA,EAAQiC,EACRvB,QAAQC,IAAIkB,cCpClB,IAAMK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQC,KAAKC,eAKf,SAASC,EAAUC,GAChC,IAAMC,EAAUf,IAGhB,OACE,sBAAKX,UAAW0B,EAAQZ,KAAxB,UACE,cAACa,EAAA,EAAD,CAAMC,WAAS,EAACV,QAAS,EAAzB,SACIO,EAAMI,OAAOC,KAAI,SAAApC,GACnB,OACA,cAACiC,EAAA,EAAD,CAAMI,MAAI,EAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAtC,SACA,cAACC,EAAA,EAAD,CAAOpC,UAAW0B,EAAQV,MAA1B,SACA,cAACxC,EAAD,CAAOC,MAAOiB,aAOhB,cAACC,EAAA,EAAD,CACC0C,MAAO,CAACC,UAAW,QAClBC,QAAQ,YACRnB,MAAM,UACNpB,UAAW0B,EAAQc,OACnBC,UAAW,cAAC,IAAD,IALb,uBChBSC,MAnBf,WASE,OACE,sBAAK1C,UAAU,MAAf,UACE,oGACD,qBAAKA,UAAU,YAAf,SACA,cAAC,EAAD,CAAW6B,OAZE,CACd,CAACnC,MAAO,mBAAqBiD,GAAG,GAChC,CAACjD,MAAO,oBAAqBiD,GAAG,GAChC,CAACjD,MAAO,sBAAuBiD,GAAG,GAClC,CAACjD,MAAO,uBAAwBiD,GAAG,GACnC,CAACjD,MAAO,wBACR,CAACkD,OAAQ,aCAEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASoE,eAAe,SAM1BZ,M","file":"static/js/main.9bcf4276.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nexport default function Photo({image}) {\r\n  // состояние для выбраного файла\r\n  const [selectedFile, setSelectedFile] = useState()\r\n  // состояние для создания превью картинки\r\n  const [preview, setPreview] = useState()\r\n\r\n  // проверка на отсуствие файла для его подальшего добавления\r\n  useEffect(() => {\r\n      if (!selectedFile) {\r\n          setPreview(undefined)\r\n          return\r\n      }\r\n\r\n      const objectUrl = URL.createObjectURL(selectedFile)\r\n      setPreview(objectUrl)\r\n      \r\n      console.log(objectUrl);\r\n      const selector = document.querySelector('.MuiGrid-root')\r\n      selector.insertAdjacentHTML('beforeend', `<div class=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-6 MuiGrid-grid-md-3 MuiGrid-grid-lg-4\">\r\n        <div class=\"MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded\">\r\n        <h1>Adding files</h1>\r\n\r\n        <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text\" tabindex=\"0\" type=\"button\"><span class=\"MuiButton-label\">\r\n          <div class=\"cardAdd\">\r\n            <img class=\"card-img card card-img\" src=\"${objectUrl}\">\r\n          </div>\r\n        </div>` )\r\n      return () => URL.revokeObjectURL(objectUrl)\r\n  }, [selectedFile])\r\n\r\n  const onSelectFile = e => {\r\n    \r\n    setSelectedFile(e.target.files[0])\r\n    // конвертация объекта картинки в массив, \r\n    // для последующих манипуляций\r\n    const files = Array.from(e.target.files)\r\n    files.forEach(file => {\r\n      image = Array.from(image)\r\n\r\n      image = file\r\n      console.log(files);\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  if (image.photo != null) {\r\n    return (\r\n      <Button>\r\n        <div \r\n          lassName='card'\r\n          onClick={Photo}\r\n        >\r\n        <Card.Img className='card' src={image.photo} />\r\n      </div>\r\n      </Button>\r\n    );\r\n  }\r\n  \r\n    return (\r\n      <Button>\r\n      <div className='cardAdd'>\r\n          {selectedFile &&  <Card.Img className='card card-img'src={preview} /> }\r\n          <input \r\n           className='input'\r\n           type=\"file\" \r\n           onChange={onSelectFile}\r\n           />\r\n\r\n    </div>\r\n      </Button>\r\n    )\r\n \r\n}","import React, {} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Button from '@material-ui/core/Button';\r\nimport Photo from './Photo'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n\r\nexport default function AllPhotos(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        { props.photos.map(photo => {\r\n        return (\r\n        <Grid item  lg={4} xs={12} sm={6} md={3}>\r\n        <Paper className={classes.paper}>\r\n        <Photo image={photo}/>\r\n        </Paper>\r\n        </Grid>\r\n        )\r\n       })\r\n      }\r\n      </Grid>\r\n      <Button\r\n       style={{marginTop: '30px'}}\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        className={classes.button}\r\n        startIcon={<CloudUploadIcon />}\r\n      >\r\n        Upload\r\n      </Button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport PhotoList from './components/PhotoList'\n\n\n\nfunction App() {\n  const gallery = [\n    {photo: './images/bag.jpg',  id:1},\n    {photo: './images/walk.jpg', id:2},\n    {photo: './images/sunset.jpg', id:3},\n    {photo: './images/sunrise.jpg', id:4},\n    {photo: './images/300x200.jpg'},\n    {adding: ''},\n  ]\n  return (\n    <div className=\"App\">\n      <h1>Фотогалерея</h1>\n     <div className=\"photoGrid\">\n     <PhotoList photos={gallery} />\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}